# roles/mariadb/tasks/databases.yml
---
- name: Remove the test database
  mysql_db:
    name: test
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    state: absent
  when: ansible_facts['os_family'] == "RedHat"
  tags: mariadb

- name: Remove the test database
  mysql_db:
    name: test
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: absent
  when: ansible_facts['os_family'] == "Debian"
  tags: mariadb

- name: Create user defined databases
  mysql_db:
    name: "{{ item.name }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    state: present
  with_items: "{{ mariadb_databases }}"
  when: ansible_facts['os_family'] == "RedHat"
  register: db_creation
  tags: mariadb

- name: Create user defined databases
  mysql_db:
    name: "{{ item.name }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  with_items: "{{ mariadb_databases }}"
  when: ansible_facts['os_family'] == "Debian"
  register: db_creation
  tags: mariadb

# Below, the databases are initialised, but only when the database was created
# in the previous step. This ensures idempotence.

- name: Copy database init scripts
  copy:
    src: "{{ item.item.init_script }}"
    dest: "/tmp/{{ item.item.init_script|basename }}"
    mode: "0600"
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined
  tags: mariadb

- name: Initialise databases
  mysql_db:
    name: "{{ item.item.name }}"
    state: import
    target: "/tmp/{{ item.item.init_script|basename }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined and (ansible_facts['os_family'] == "RedHat")
  tags: mariadb

- name: Initialise databases
  mysql_db:
    name: "{{ item.item.name }}"
    state: import
    target: "/tmp/{{ item.item.init_script|basename }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined and (ansible_facts['os_family'] == "Debian")
  tags: mariadb

- name: Delete init scripts from the server
  file:
    name: "/tmp/{{ item.item.init_script|basename }}"
    state: absent
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined
  tags: mariadb
